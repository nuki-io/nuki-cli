package blecommands_test

import (
	"testing"

	"github.com/stretchr/testify/require"
	"go.nuki.io/nuki/nukictl/pkg/blecommands"
)

func TestRequestPublicKeyToMessage(t *testing.T) {
	cmd := blecommands.NewUnencryptedRequestData(blecommands.CommandPublicKey)
	got := cmd.ToMessage()
	want := []byte{0x01, 0x00, 0x03, 0x00, 0x27, 0xA7}
	require.Equal(t, want, got)
}

func TestEncryptedRequestChallenge(t *testing.T) {
	authId := []byte{0x02, 0x00, 0x00, 0x00}
	crypto := blecommands.NewCrypto([]byte{0x21, 0x7F, 0xCB, 0x0F, 0x18, 0xCA, 0xF2, 0x84, 0xE9, 0xBD, 0xEA, 0x0B, 0x94, 0xB8, 0x3B, 0x8D, 0x10, 0x86, 0x7E, 0xD7, 0x06, 0xBF, 0xDE, 0xDB, 0xD2, 0x38, 0x1F, 0x4C, 0xB3, 0xB8, 0xF7, 0x30})
	cmd := blecommands.NewEncryptedRequestData(crypto, authId, blecommands.CommandChallenge)
	nonce := []byte{0x88, 0xFD, 0xEF, 0xD7, 0xF9, 0x41, 0xB6, 0x3C, 0x24, 0x2B, 0x7F, 0x84, 0xB3, 0xD7, 0x86, 0x88, 0x63, 0x40, 0xA4, 0xA8, 0xB1, 0xC1, 0xEA, 0xA0}
	msg := cmd.ToMessage(nonce)

	want := []byte{
		// nonce 24 bytes
		0x88, 0xFD, 0xEF, 0xD7, 0xF9, 0x41, 0xB6, 0x3C,
		0x24, 0x2B, 0x7F, 0x84, 0xB3, 0xD7, 0x86, 0x88,
		0x63, 0x40, 0xA4, 0xA8, 0xB1, 0xC1, 0xEA, 0xA0,
		// auth id 4 bytes
		0x02, 0x00, 0x00, 0x00,
		// msg length 2 bytes
		0x1A, 0x00,
		// PDATA
		0x06, 0x68, 0x19, 0xA2, 0x95, 0x6E, 0x6A, 0x79,
		0xAF, 0x6E, 0xD6, 0x6D, 0x25, 0x7B, 0x27, 0x67,
		0x15, 0xF5, 0x1F, 0x63, 0xA8, 0xBE, 0xB9, 0xED,
		0x0D, 0x47,
	}
	require.Equal(t, want, msg)
}
